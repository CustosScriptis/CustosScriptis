# This is a workflow that counts the lines of code of all my public repositories

name: LOC

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  schedule: [{cron: "0 0 * * *"}]
  workflow_dispatch:
  push: {branches: ["master", "main"]}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: get loc of all github repos
        run: |
          curl -L "https://api.github.com/users/tblaase/repos?type=owner" | grep -o 'git@[^"]*'| awk 'NR > 3{ print $1 }' | cut -d'/' -f 2 | cut -d'.' -f 1 > my_repos.txt && curl -L "https://api.github.com/users/tblaase/repos?type=member" | grep -o 'git@[^"]*' | cut -d'/' -f 2 | cut -d'.' -f 1 >> my_repos.txt
          export lines=$(expr $(wc -l my_repos.txt | cut -c -8 | cut -c 7-))
          for (( i = 0; i < $lines; i++))
          do
	          curl -L "https://api.codetabs.com/v1/loc?github=tblaase/$(awk -v i=$i 'NR == i' my_repos.txt)" | cut -d : -f 2 > myfile.loc && export LOC=$(expr $(wc -l myfile.loc | cut -c -8 | cut -c 7-) - 1) && awk -v LOC=$LOC 'NR == LOC' < myfile.loc | cut -c 2- >temp.loc && mv temp.loc myfile.loc && cat myfile.loc >>LOC_collection.loc
          done
